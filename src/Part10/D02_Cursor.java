package Part10;

/**
 * @author liyanpeng
 * @date 2025/5/8
 * @description TODO
 */

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * 問い合わせ結果のスクロール、絶対・相対位置指定
 * ✅ ResultSet 的光标移动方法一览说明表
 * ResultSet 光标控制方法一览
 * ResultSet 光标控制方法一览
 * ┌──────────────────────────────────────┬───────────────────────────────┬─────────────────────┬────────────────────────────────────────────────────────────────────────────┐
 * │ 方法签名                             │ 参数说明                      │ 抛出异常              │ 说明                                                                       │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean absolute(int row)            │ row: 目标行号（从1开始）       │ SQLException         │ 将光标移动到指定的行；返回 true 表示移动成功，false 表示行不存在             │
 * │                                      │ 负数表示从末尾开始倒数第 row 行│                       │ 如 -1 表示最后一行                                                          │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean relative(int rows)           │ rows: 相对当前行的偏移量       │ SQLException         │ 将光标从当前位置向前或向后移动指定行数；成功移动到有效行返回 true，否则 false│
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean next()                        │ 无                            │ SQLException         │ 将光标向前移动一行；如果新位置存在有效行则返回 true，否则返回 false         │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean previous()                    │ 无                            │ SQLException         │ 将光标向后移动一行；若成功移到有效行则返回 true，否则返回 false              │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean first()                      │ 无                            │ SQLException         │ 将光标移动到第一行；成功则返回 true，否则返回 false（例如没有数据）         │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ boolean last()                       │ 无                            │ SQLException         │ 将光标移动到最后一行；成功则返回 true，否则返回 false                       │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ void beforeFirst()                   │ 无                            │ SQLException         │ 将光标移至第一行之前的位置；调用 next() 可读取第一行                        │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ void afterLast()                     │ 无                            │ SQLException         │ 将光标移至最后一行之后的位置；调用 previous() 可读取最后一行                │
 * ├──────────────────────────────────────┼───────────────────────────────┼─────────────────────┼────────────────────────────────────────────────────────────────────────────┤
 * │ int getRow()                         │ 无                            │ SQLException         │ 返回当前光标所在的行号（从1开始）；若光标不在任何行上则返回 0              │
 * └──────────────────────────────────────┴───────────────────────────────┴─────────────────────┴────────────────────────────────────────────────────────────────────────────┘
 */
public class D02_Cursor {
    // 自动生成 main 方法
    public static void main(String[] args) {
        // TODO
        String sql = "SELECT dept_code, dept_name FROM department " +
                "ORDER BY dept_code";
        try (Connection con = DbConnector.getConnect();
             PreparedStatement pstmt = con.prepareStatement(
                     sql,
                     ResultSet.TYPE_SCROLL_INSENSITIVE,
                     ResultSet.CONCUR_UPDATABLE)) {
            ResultSet rs = pstmt.executeQuery();
            rs.last();  // 最終行に移動
            System.out.println("最後の行番号 : " + rs.getRow());
            rs.afterLast(); // 最終行の次の行に移動
            while (rs.previous()) { // 逆方向にスクロール
                System.out.println(rs.getString(1) + " " + rs.getString(2));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        /**
         * 最後の行番号 : 6
         * 8 Support
         * 5 Education
         * 4 Marketing
         * 3 Development
         * 2 Engineering
         * 1 Sales
         */
    }
}