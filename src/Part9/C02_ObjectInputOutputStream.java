package Part9;

/**
 * @author liyanpeng
 * @date 2025/5/5
 * @description TODO
 */

/**
 * 📦 ObjectInputStream 和 ObjectOutputStream简介说明
 * ObjectOutputStream：用于将对象写入输出流，实现对象的序列化。
 * ObjectInputStream：用于从输入流中读取对象，实现对象的反序列化。
 * 这两个类常搭配使用，配合实现了 Serializable 接口的对象类。
 * <p>
 * 📘 ObjectOutputStream 构造函数 & 方法一览
 * +---------------------------------------------------------+---------------------------------------------------+
 * | 构造函数 / 方法                                         | 说明                                              |
 * +=========================================================+===================================================+
 * | ObjectOutputStream(OutputStream out)                    | 使用输出流创建对象输出流                         |
 * +---------------------------------------------------------+---------------------------------------------------+
 * | void writeObject(Object obj) throws IOException         | 将对象写入输出流（要求对象实现 Serializable）         |
 * |                                                         | 不是覆盖写入：每次 writeObject() 都会追加新对象到流中  |
 * +---------------------------------------------------------+---------------------------------------------------+
 * | void close() throws IOException                         | 关闭输出流                                        |
 * +---------------------------------------------------------+---------------------------------------------------+
 * <p>
 * <p>
 * 📗 ObjectInputStream 构造函数 & 方法一览
 * +----------------------------------------------------------+--------------------------------------------------+
 * | 构造函数 / 方法                                          | 说明                                             |
 * +==========================================================+==================================================+
 * | ObjectInputStream(InputStream in)                        | 使用输入流创建对象输入流                        |
 * +----------------------------------------------------------+--------------------------------------------------+
 * | Object readObject() throws IOException, ClassNotFoundException | 从流中读取对象（返回 Object 类型）       |
 * +----------------------------------------------------------+--------------------------------------------------+
 * | void close() throws IOException                          | 关闭输入流                                       |
 * +----------------------------------------------------------+--------------------------------------------------+
 * <p>
 * <p>
 * 🧷 使用注意事项
 * 所有要被序列化的对象必须实现 java.io.Serializable 接口。
 * transient 和 static 修饰的字段不会被序列化。
 * 反序列化时，类路径、字段名、类版本号必须一致。
 */
public class C02_ObjectInputOutputStream {
    // 自动生成 main 方法
    public static void main(String[] args) {
        // TODO
    }
}